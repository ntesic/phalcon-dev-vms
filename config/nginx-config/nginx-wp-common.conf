# nginx-wp-common.conf
#
# Contains a common configuration for use by nginx on a WordPress
# installation. This file should be included in any WordPress site
# nginx config with the following line:
#
#     include      /etc/nginx/nginx-wp-common.conf;
#
# See local-nginx-example.conf-sample for a full example
location / {
    index  index.html index.php;
    try_files $uri $uri/ /index.php?$args;
    autoindex on;
}

# Specify a charset
charset utf-8;

# Weird things happened to me when I had gzip on, may need to try
# again in the future as it could have been related to many other
# factors - JF
gzip off;


location ~ \.php$ {

    client_max_body_size 50M;

    # Try the files specified in order. In our case, try the requested URI and if
    # that fails, try (successfully) to pass a 404 error.
    try_files      $uri =404;

    # Include the fastcgi_params defaults provided by nginx
    include        /etc/nginx/fastcgi_params;

    # The amount of time for upstream to wait for a fastcgi process to send data.
    # We keep this *extremely* high so that one can be lazy when remote debugging.
    fastcgi_read_timeout 3600s;

    # Buffer size for reading the header of the backend FastCGI process.
    # This defaults to the value of a single fastcgi_buffers, so does not
    # need to be specified in our case, but it's good to be explicit.
    fastcgi_buffer_size 128k;

    # The number and size of the buffers into which the reply from the FastCGI
    # process in the backend is read.
    #
    # 4 buffers at 128k means that any reply by FastCGI greater than 512k goes
    # to disk and replies under 512k are handled directly in memory.
    fastcgi_buffers 4 128k;

    # SCRIPT_FILENAME is a required parameter for things to work properly,
    # but was missing in the default fastcgi_params on upgrade to nginx 1.4.
    # We define it here to be sure that it exists.
    fastcgi_param   SCRIPT_FILENAME         $document_root$fastcgi_script_name;

    # Use the upstream for php5-fpm that we defined in nginx.conf
    fastcgi_pass   php;

    # And get to serving the file!
    fastcgi_index  index.php;
}

# folder url rewrite
location ~ ^(.+\.php)(.*)$ {

    fastcgi_split_path_info ^(.+\.php)(.*)$;

     # Use the upstream for php5-fpm that we defined in nginx.conf
     fastcgi_pass   php;

     # And get to serving the file!
     fastcgi_index  index.php;

     # Include the fastcgi_params defaults provided by nginx
     include        /etc/nginx/fastcgi_params;

     # The amount of time for upstream to wait for a fastcgi process to send data.
     # We keep this *extremely* high so that one can be lazy when remote debugging.
     fastcgi_read_timeout 3600s;

     # Buffer size for reading the header of the backend FastCGI process.
     # This defaults to the value of a single fastcgi_buffers, so does not
     # need to be specified in our case, but it's good to be explicit.
     fastcgi_buffer_size 128k;

     # The number and size of the buffers into which the reply from the FastCGI
     # process in the backend is read.
     #
     # 4 buffers at 128k means that any reply by FastCGI greater than 512k goes
     # to disk and replies under 512k are handled directly in memory.
     fastcgi_buffers 4 128k;

     # SCRIPT_FILENAME is a required parameter for things to work properly,
     # but was missing in the default fastcgi_params on upgrade to nginx 1.4.
     # We define it here to be sure that it exists.
     fastcgi_param   SCRIPT_FILENAME         $document_root$fastcgi_script_name;
     fastcgi_param PATH_INFO $fastcgi_script_name;

     # Try the files specified in order. In our case, try the requested URI and if
     # that fails, try (successfully) to pass a 404 error.
     #try_files      $uri =404;

}

# nassag project

#location ~ ^/.*/nassi-desktop/nassi_desktop/api {
#    rewrite ^/(.*)/nassi-desktop/nassi_desktop/api/(.*) http://$http_host/$1/nassi-backend/index.php/api/$2;
#}

location /nassag/extjs-erp/api {
    proxy_pass http://local.taktwerk.dev/nassag/nassi-backend/index.php/api;
}

#mcm project
location /baumgartner/mcm/ {
    index  index.html index.php;
    try_files $uri $uri/ /baumgartner/mcm/index.php?$args;
}

#solarsquare project
location /solafrica/solarsquareportal/web/ {
    index  index.html index.php;
    try_files $uri $uri/ /solafrica/solarsquareportal/web/index.php?$args;
}

#solarsquare project API
location /solafrica/solarsquareportal/api/ {
    index  index.html index.php;
    try_files $uri $uri/ /solafrica/solarsquareportal/api/index.php?$args;
}